stages:
- build
- check
- publish

build:docker:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.10.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}"
      --cache=true --cache-copy-layers=true --cache-ttl=24h --cache-run-layers=true
  rules:
    - if: $CI_COMMIT_BRANCH

check:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
  stage: check
  before_script:
    - rye sync
  script:
    - rye run check
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - ".cache"
  rules:
    - if: $CI_COMMIT_BRANCH

build:package:
  stage: build
  image: $CI_REGISTRY_IMAGE:main
  script:
    - rye build
  artifacts:
    untracked: false
    when: on_success
    expire_in: "7 days"
    paths:
      - "dist"
  rules:
    - if: $CI_COMMIT_TAG

publish:package:
  stage: publish
  image: $CI_REGISTRY_IMAGE:main
  needs:
    - build:package
  script:
    - rye publish --repository gitlab --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi --username gitlab-ci-token --token ${CI_JOB_TOKEN} -y
  rules:
    - if: $CI_COMMIT_TAG

publish:release:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - build:package
    - publish:package
  dependencies:
    - "build:package"
  script:
  - echo "release job"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release: $CI_COMMIT_TAG"
    assets:
      links:
        - name: "people-$CI_COMMIT_TAG"
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi/simple/${CI_PROJECT_NAME}/"
          link_type: package
  rules:
    - if: $CI_COMMIT_TAG
